img.pull-right(src=image alt="Java")

p.img-first I‚Äôve recently started working with #[=""]
  a(href="https://projectlombok.org/") Lombok
  | , a really great project.

p The Lombok‚Äôs goal is to add facilities and syntax sugar to a
  |  bureaucratic and painful #[=""]
  a(href="https://www.java.com/") Java language
  | , and at first sight it seems very useful.

p Let‚Äôs look at a made-easier Java code. First without Lombok (I‚Äôm suppressing
  |  the imports):

pre.prettyprint: code.java.
  class Person {
      private final String name;
      private final String surname;
      private final Date birth;
      public Person(String name, String surname, Date birth) {
          this.name = name;
          this.surname = surname;
          this.birth = birth;
      }
      public String getName() {
          return this.name;
      }
      public String getSurname() {
          return this.surname;
      }
      public Date getBirth() {
          return this.birth;
      }
      public boolean equals(Object o) {
          if (o == this) return true;
          if (!(o instanceof Person)) return false;
          final Person other = (Person) o;
          return other.getName() == getName()
              && other.getSurname() == getSurname()
              && other.getBirth() == getBirth();
      }
      public String toString() {
          return "Person(name=" + getName()
              + ", surname=" + getSurname()
              + ", birth=" + getBirth()
              + ")";
      }
  }

p And a lot of other methods you may want.

p Now the same code using Lombok:

pre.pretyprint: code.java.
  @Value
  class Person {
      private final String name;
      private final String surname;
      private final Date birth;
  }

p It looks wonderful!

p We can do many other things, like change:

pre.prettyprint: code.java.
  final HashMap&lt;String, Integer&gt; map = new HashMap&lt;&gt;();

p By:

pre.prettyprint: code.java.
  val map = new HashMap&lt;String, Integer&gt;();

hr/

blockquote
  p So‚Ä¶ what‚Äôs wrong with Lombok?

p Let‚Äôs take a look at #[=""]
  a(href="https://www.scala-lang.org/") Scala
  | . The very same #[code Person] class:

pre.prettyprint: code.scala.
  case class Person(name: String, surname: String, birth: Date)

p That simple, using the #[strong native] language resources, no twists or
  |  juggling.

p The keyword here is ‚Äúnative‚Äù. Lombok injects a lot of annotations and strains
  |  into Java to do what Scala already does easily. The #[code val] is a Scala
  |  token yet, just as #[code var].

p For every Lombok feature, there‚Äôs a native Scala one ‚Äì simpler, clearer.

p Perhaps someone says that Lombok is Java yet, and Scala must be compiled to
  |  Java code before the bytecode, but even so it‚Äôs not fully honest,
  |  because #[=""]
  strong the Lombok code needs to be compiled to Java code too
  | , so it doesn‚Äôt find grounds.

p If you‚Äôre thinking of Lombok as solution, remember there are no excuses that
  |  justify using Lombok instead of Scala, and think twice.

blockquote
  p Update: I just found out that NetBeans doesn‚Äôt work well with Lombok‚Ä¶ üòì

  p You‚Äôre #[strong forced] to use Eclipse.

hr/

p:small Originally published on #[=""]
  a(href="https://medium.com/@cacilhas/why-lombok-is-a-waste-of-time-5fdb7c091d41")
    | Medium
  | .
