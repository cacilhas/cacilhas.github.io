include ../../../_includes/list-group-item.jade

img.pull-right(src="/img/erlang.png" alt="Erlang")

p.mg-first Já temos o &#32;
  a(href="/misc/monty-hall/mh_mc.erl") mestre de cerimônias
  | , que fizemos no &#32;
  a(href=public.kodumaro._data.blog.url+"2016/05/monty-hall.html")
    | artigo anterior
  | , agora precisamos de um convidado para escolher qual porta abrir.

p Vamos começar com um cabeçalho bastante simples:

pre.prettyprint: code.language-erlang.
  -module(mh_guest).
  -export([choose/0, change/2]).

  -include("mh.hrl").

  -spec choose() -&gt; door().
  -spec change(Original :: door(), Alternative :: door()) -&gt; door().

p A função para escolher a porta:

pre.prettyprint: code.language-erlang.
  choose() -&gt; lists:nth(random:uniform(3), [a, b, c]).

p E a função para mudar de porta:

pre.prettyprint: code.language-erlang.
  -ifdef(change).
  change(_Original, Alternative) -&gt; Alternative.
  -else.
  change(Original, _Alternative) -&gt; Original.
  -endif.

p Com isso, a função #[code change/2] sempre retornará a porta originalmente
  |  escolhida, a menos que o arquivo #[code mh_guest.erl] seja compilado com a
  |  #[em flag] #[code -Dchange].

p E já temos como simular o convidado!

h3 Arquivos para baixar

+ul
  +li: a(href="/misc/monty-hall/mh.hrl"): code mh.hrl
  +li: a(href="/misc/monty-hall/mh_guest.erl"): code mh_guest.erl

h3 Próximos passos

p No &#32;
  a(href="/kodumaro/2016/05/monty-hall-3.html") último artigo
  |  colocaremos tudo junto, executando diversas vezes para calcular quantas
  | vezes o convidado ganha o carro.
